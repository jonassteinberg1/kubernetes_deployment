name: Docker Build and Push

on:
  pull_request:
    branches:
      - master  # Trigger on PRs targeting the `master` branch
  push:
    branches-ignore:
      - master  # Trigger on pushes to all branches except `master`
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract Container and Version
        id: extract
        run: |
          if [[ $GITHUB_EVENT_NAME == "push" ]]; then
            # For pushes, extract commit message
            COMMIT_MESSAGE=$(git log -1 --pretty=%B)
            CONTAINER=$(echo "$COMMIT_MESSAGE" | grep -oE 'container:[^ ]+' | cut -d':' -f2)
            VERSION=$(echo "$COMMIT_MESSAGE" | grep -oE 'version:[^ ]+' | cut -d':' -f2)
          elif [[ $GITHUB_EVENT_NAME == "pull_request" ]]; then
            # For PRs, extract PR title and body
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_BODY="${{ github.event.pull_request.body }}"
            CONTAINER=$(echo "$PR_TITLE $PR_BODY" | grep -oE 'container:[^ ]+' | cut -d':' -f2)
            VERSION=$(echo "$PR_TITLE $PR_BODY" | grep -oE 'version:[^ ]+' | cut -d':' -f2)
          fi

          # Validate extracted values
          if [ -z "$CONTAINER" ] || [ -z "$VERSION" ]; then
            echo "Error: Missing 'container:<name>' or 'version:<tag>' in commit/PR." >&2
            exit 1
          fi

          echo "CONTAINER=$CONTAINER" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate with AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        env:
          CONTAINER: ${{ env.CONTAINER }}
          VERSION: ${{ env.VERSION }}
        run: |
          echo "Building Docker image for $CONTAINER:$VERSION"
          docker buildx build -t $CONTAINER:$VERSION -f $CONTAINER.dockerfile .
          echo "Tagging image with ECR repository URL"
          docker tag $CONTAINER:$VERSION 379683964026.dkr.ecr.us-east-1.amazonaws.com/$CONTAINER:$VERSION
          echo "Pushing image to AWS ECR"
          docker push 379683964026.dkr.ecr.us-east-1.amazonaws.com/$CONTAINER:$VERSION

